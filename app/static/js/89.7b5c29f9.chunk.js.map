{"version":3,"file":"static/js/89.7b5c29f9.chunk.js","mappings":"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","sources":["app/models/project/project.declarations.ts","app/models/reserved-fields.constant.ts","app/libs/tools/date-tools.class.ts","app/models/project/syncing/project-comparator.ts","app/workers/comparator.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { LOCAL_STORAGE_SYSTEMS } from 'app/data/local-dbs/local-storage-systems.enum'\r\nimport { AbstractModel } from 'app/libs/db-connector/models/abstract-model'\r\nimport { FileSystemFileHandle } from 'app/libs/db-connector/plugins/file-handles/helpers/file-system-access-api'\r\nimport { ISection } from 'app/models/section/section.declarations'\r\nimport { ISectionElement } from 'app/models/section-element/section-element.declarations'\r\n\r\n/**\r\n * Reserved keys are needed to store system required properties.\r\n *\r\n * @remarks\r\n * Users can still pick any of these as section names as sections are stored using their system-generated `id` as key.\r\n */\r\nexport enum RESERVED_AUDS_KEYS {\r\n  _settings = '_settings',\r\n  _sections = '_sections'\r\n}\r\n\r\n/**\r\n * Data structure of Anita, composed of both SystemData and UserData.\r\n */\r\nexport type TAnitaUniversalDataStorage = TSystemData & UserData;\r\n\r\n/**\r\n * Store for system required properties. Includes general settings and Sections declarations. The reserved keys define system required properties.\r\n */\r\nexport type TSystemData = {\r\n  [RESERVED_AUDS_KEYS._settings]: Array<IProjectSettings>\r\n  [RESERVED_AUDS_KEYS._sections]: Array<ISection>\r\n};\r\n\r\n/**\r\n * Sections' data, stored in a Object, where the key is the section `id` and the value is a `Array<SectionElement>`.\r\n */\r\nexport type UserData = {\r\n  [sectionId: string]: Array<ISectionElement>\r\n};\r\n\r\n/**\r\n * Defines the structure of the general information on a project.\r\n */\r\nexport interface IProjectSettings {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  createdAt: string\r\n  localStorage?: LOCAL_STORAGE_SYSTEMS\r\n  updatedAt?: string\r\n  encrypted?: boolean\r\n  cloudSync?: {\r\n    dropbox?: string\r\n  }\r\n}\r\n\r\nexport interface AdditionalInfoForLocalStorage {\r\n  fileHandle?: FileSystemFileHandle\r\n  dexieInfoForUpgrade?: {\r\n    previousVersions: Array<Array<string>>\r\n    DS: AbstractModel\r\n  }\r\n}\r\n\r\n/**\r\n * Info on Projects saved locally to know what project are on the device.\r\n *\r\n * @property [fileHandle] - The file handle of the project file (only if the project is saved on the file system)\r\n * @property [sections] - The sections of the project to load the IndexedDB database with Dexie\r\n */\r\nexport interface LocalProjectSettings extends IProjectSettings, AdditionalInfoForLocalStorage {\r\n}\r\n","/**\r\n * Defines the fields name that are reserved for the functioning of Anita.\r\n * These fields names cannot be assigned as the value of the `fieldName` of sections' fields.\r\n */\r\nexport enum RESERVED_FIELDS {\r\n  id = 'id',\r\n  createdAt = 'createdAt',\r\n  parentsInfo = 'parentsInfo',\r\n  updatedAt = 'updatedAt',\r\n  createdBy = 'createdBy'\r\n}\r\n","export class DateTools {\r\n  public static getUtcIsoString (date: Date = new Date()): string {\r\n    return new Date(date.toUTCString()).toISOString()\r\n  }\r\n\r\n  public static areEqual (date1: Date | string | undefined, date2: Date | string | undefined): boolean {\r\n    const d1 = new Date(date1 || 0)\r\n    const d2 = new Date(date2 || 0)\r\n    return d1.getTime() === d2.getTime()\r\n  }\r\n\r\n  public static firstIsAfterSecond (date1: Date | string | undefined, date2: Date | string | undefined): boolean {\r\n    const d1 = new Date(date1 || 0)\r\n    const d2 = new Date(date2 || 0)\r\n    return d1.getTime() > d2.getTime()\r\n  }\r\n}\r\n","import { DateTools } from 'app/libs/tools/date-tools.class'\r\nimport { RESERVED_AUDS_KEYS, TAnitaUniversalDataStorage } from 'app/models/project/project.declarations'\r\nimport { RESERVED_FIELDS } from 'app/models/reserved-fields.constant'\r\nimport { ISectionElement } from 'app/models/section-element/section-element.declarations'\r\n\r\nexport interface IComparisonResult {\r\n  remote: IElesForScope\r\n  remoteData: TAnitaUniversalDataStorage\r\n  local: IElesForScope\r\n  localData: TAnitaUniversalDataStorage\r\n}\r\n\r\ninterface IElesForScope {\r\n  delete: Partial<TAnitaUniversalDataStorage>\r\n  insert: Partial<TAnitaUniversalDataStorage>\r\n  update: Partial<TAnitaUniversalDataStorage>\r\n}\r\n\r\nexport class Comparator {\r\n  private static nonDeletableSections = Object.values(RESERVED_AUDS_KEYS)\r\n  private delta: IComparisonResult = {\r\n    remote: {\r\n      delete: {},\r\n      insert: {},\r\n      update: {}\r\n    },\r\n    remoteData: {} as TAnitaUniversalDataStorage,\r\n    local: {\r\n      delete: {},\r\n      insert: {},\r\n      update: {}\r\n    },\r\n    localData: {} as TAnitaUniversalDataStorage\r\n  }\r\n\r\n  private localElementsMerged: { [key: keyof TAnitaUniversalDataStorage]: Array<string> } = {}\r\n\r\n  constructor (\r\n    private lastSync: string | undefined,\r\n    private localData: TAnitaUniversalDataStorage,\r\n    private remoteData: TAnitaUniversalDataStorage\r\n  ) { }\r\n\r\n  public compare (): IComparisonResult {\r\n    if (!this.remoteData) {\r\n      this.remoteData = {} as TAnitaUniversalDataStorage\r\n    }\r\n    for (const section in this.remoteData) {\r\n      this.handleSection(section)\r\n    }\r\n    this.handleAllLocalElements()\r\n    this.delta.remoteData = this.applyDeltaToData('remote', this.remoteData)\r\n    this.delta.localData = this.applyDeltaToData('local', this.localData)\r\n    return this.delta\r\n  }\r\n\r\n  private handleSection (section: keyof TAnitaUniversalDataStorage): void {\r\n    this.localElementsMerged[section] = []\r\n    const pkKey = RESERVED_FIELDS.id\r\n    if (this.remoteData[section] && this.remoteData[section].length > 0) {\r\n      for (let remElesCounter = 0, remElesLen = this.remoteData[section].length; remElesCounter < remElesLen; remElesCounter++) {\r\n        try {\r\n          const element = this.localData[section].find((ele) => ele[pkKey] === this.remoteData[section][remElesCounter][pkKey])\r\n          if (element) {\r\n            this.toDoIfLocalElementExistsOrNot(remElesCounter, section, element)\r\n          }\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private applyDeltaToData (scope: 'local' | 'remote', dataToUpdate: TAnitaUniversalDataStorage): TAnitaUniversalDataStorage {\r\n    for (const action in this.delta[scope]) {\r\n      const actionAsKey = action as keyof IElesForScope\r\n      const deltaRemoteActionData = this.delta[scope][actionAsKey]\r\n      for (const section in deltaRemoteActionData) {\r\n        const sectionAsKey = section as keyof TAnitaUniversalDataStorage\r\n        if (typeof deltaRemoteActionData[sectionAsKey] === 'object') {\r\n          for (const element of deltaRemoteActionData[sectionAsKey]!) {\r\n            if (actionAsKey === 'delete') {\r\n              dataToUpdate[sectionAsKey] = dataToUpdate?.[sectionAsKey]?.filter((ele) => ele[RESERVED_FIELDS.id] !== element[RESERVED_FIELDS.id])\r\n            } else if (actionAsKey === 'insert') {\r\n              if (!dataToUpdate[sectionAsKey]) {\r\n                dataToUpdate[sectionAsKey] = []\r\n              }\r\n              dataToUpdate[sectionAsKey].push(element)\r\n            } else if (actionAsKey === 'update') {\r\n              const indexElement = dataToUpdate[sectionAsKey].findIndex((ele) => ele[RESERVED_FIELDS.id] === element[RESERVED_FIELDS.id])\r\n              if (indexElement !== -1) {\r\n                dataToUpdate[sectionAsKey][indexElement] = element\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return dataToUpdate\r\n  }\r\n\r\n  private toDoIfLocalElementExistsOrNot (remElesCounter: number, section: keyof TAnitaUniversalDataStorage, localElement: ISectionElement): void {\r\n    if (localElement) {\r\n      this.checkWhatToUpdate(section, localElement, remElesCounter)\r\n    } else {\r\n      this.checkIfInsertOrDelete(section, remElesCounter)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method checkWhatToUpdate\r\n   * @description The element exist both online and locally\r\n   *              Here we need to determine which one has been edited for last, if updatedAt is different\r\n   *              Either we update the local one, or store in a temp var the value to push it to the db\r\n   *              after we drop the localelement from the localElementsList, to see what's left at the end\r\n   */\r\n  private checkWhatToUpdate (section: keyof TAnitaUniversalDataStorage, localElement: ISectionElement, remElesCounter: number): void {\r\n    const pkKey = RESERVED_FIELDS.id\r\n    const remoteElement = this.remoteData[section][remElesCounter]\r\n    if (!DateTools.areEqual(remoteElement[RESERVED_FIELDS.updatedAt], localElement[RESERVED_FIELDS.updatedAt])) {\r\n      const target = DateTools.firstIsAfterSecond(remoteElement[RESERVED_FIELDS.updatedAt], localElement[RESERVED_FIELDS.updatedAt]) ? 'local' : 'remote'\r\n      const newestElement = target === 'local' ? remoteElement : localElement\r\n      this.addElesForScope(target, 'update', section, newestElement)\r\n    }\r\n    if (localElement[pkKey]) {\r\n      this.addToLocalElementsMerged(section, localElement)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @method checkIfInsertOrDelete\r\n   * @description The element exist only online\r\n   *              Here we need to determine if the elements has been added online, or removed from the app\r\n   *              If the updatedAt is after the lastSync, or the lastSync is null, the element has to be added locally\r\n   *              otherwise, the element has to be deleted from the remote db\r\n   */\r\n  private checkIfInsertOrDelete (section: keyof TAnitaUniversalDataStorage, remElesCounter: number): void {\r\n    const dateCompareField = this.remoteData[section][remElesCounter][RESERVED_FIELDS.updatedAt] ? RESERVED_FIELDS.updatedAt : RESERVED_FIELDS.createdAt\r\n    const target = DateTools.firstIsAfterSecond(this.remoteData[section][remElesCounter][dateCompareField], this.lastSync) || !this.lastSync ? 'local' : 'remote'\r\n    const action = target === 'local' ? 'insert' : 'delete'\r\n    this.addElesForScope(target, action, section, this.remoteData[section][remElesCounter])\r\n    if (target === 'remote') {\r\n      this.addToLocalElementsMerged(section, this.remoteData[section][remElesCounter])\r\n    }\r\n  }\r\n\r\n  private handleAllLocalElements (): void {\r\n    for (const section in this.localData) {\r\n      this.handleLocalElements(section)\r\n    }\r\n  }\r\n\r\n  private handleLocalElements (section: keyof TAnitaUniversalDataStorage): void {\r\n    const pkKey = RESERVED_FIELDS.id\r\n\r\n    if (this.localElementsMerged?.[section]?.length) {\r\n      const elements = this.localData[section].filter((ele) => ele[pkKey] && !this.localElementsMerged[section].includes(ele[pkKey]))\r\n      this.elesInLocalDbOnly(section, elements)\r\n    } else {\r\n      this.elesInLocalDbOnly(section, this.localData[section])\r\n    }\r\n  }\r\n\r\n  private elesInLocalDbOnly (section: keyof TAnitaUniversalDataStorage, localElementsList: ISectionElement): void {\r\n    const dateCompareField = RESERVED_FIELDS.updatedAt\r\n    if (localElementsList) {\r\n      /* Here we analyze the remaining local elements (if any)\r\n       * If the updatedAt is after the lastSync, or the lastSync is null, the element has to be pushed to the remote db\r\n       * otherwise, the element has to be deleted from the local db\r\n       */\r\n      for (let localElesOnlyCounter = 0, remoteElesOnlyLen = localElementsList.length; localElesOnlyCounter < remoteElesOnlyLen; localElesOnlyCounter++) {\r\n        const target = (DateTools.firstIsAfterSecond(localElementsList[localElesOnlyCounter][dateCompareField], this.lastSync) || !this.lastSync) ? 'remote' : 'local'\r\n        const action = target === 'local' ? 'delete' : 'insert'\r\n        this.addElesForScope(target, action, section, localElementsList[localElesOnlyCounter])\r\n      }\r\n    }\r\n  }\r\n\r\n  private addToLocalElementsMerged (section: keyof TAnitaUniversalDataStorage, element: ISectionElement): void {\r\n    const pkKey = RESERVED_FIELDS.id\r\n    if (element[pkKey]) {\r\n      this.localElementsMerged[section].push(element[pkKey])\r\n    }\r\n  }\r\n\r\n  private addElesForScope (target: 'remote' | 'local', action: 'delete' | 'insert' | 'update', section: keyof TAnitaUniversalDataStorage, element: ISectionElement): void {\r\n    if (action === 'delete' && Comparator.nonDeletableSections.includes(section as unknown as RESERVED_AUDS_KEYS)) {\r\n      return\r\n    }\r\n    if (!this.delta[target][action]) {\r\n      this.delta[target][action] = {}\r\n    }\r\n    if (!this.delta[target][action]) {\r\n      this.delta[target][action] = {}\r\n    }\r\n    if (!this.delta[target][action][section]) {\r\n      this.delta[target][action][section] = []\r\n    }\r\n    this.delta[target][action][section]!.push(element)\r\n  }\r\n}\r\n","import { TAnitaUniversalDataStorage } from 'app/models/project/project.declarations'\r\nimport { Comparator } from 'app/models/project/syncing/project-comparator'\r\n\r\ninterface IComparatorWorkerPayload {\r\n  lastSync: string | undefined\r\n  localData: TAnitaUniversalDataStorage\r\n  remoteData: TAnitaUniversalDataStorage\r\n}\r\n\r\nself.onmessage = async (event: MessageEvent<IComparatorWorkerPayload>) => {\r\n  const { lastSync, localData, remoteData } = event.data\r\n  const comparisonResult = new Comparator(lastSync, localData, remoteData).compare()\r\n  self.postMessage(comparisonResult)\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [60], function() { return __webpack_require__(8089); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"d10a5730\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/app/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t89: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkanita_app\"] = self[\"webpackChunkanita_app\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(60).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["RESERVED_AUDS_KEYS","RESERVED_FIELDS","DateTools","date","Date","toUTCString","toISOString","date1","date2","d1","d2","getTime","Comparator","lastSync","localData","remoteData","delta","remote","delete","insert","update","local","localElementsMerged","section","this","handleSection","handleAllLocalElements","applyDeltaToData","pkKey","id","length","remElesCounter","remElesLen","element","find","ele","toDoIfLocalElementExistsOrNot","error","console","scope","dataToUpdate","action","actionAsKey","deltaRemoteActionData","sectionAsKey","filter","push","indexElement","findIndex","localElement","checkWhatToUpdate","checkIfInsertOrDelete","remoteElement","areEqual","updatedAt","target","firstIsAfterSecond","newestElement","addElesForScope","addToLocalElementsMerged","dateCompareField","createdAt","handleLocalElements","elements","includes","elesInLocalDbOnly","localElementsList","localElesOnlyCounter","remoteElesOnlyLen","nonDeletableSections","Object","values","self","onmessage","event","data","comparisonResult","compare","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}